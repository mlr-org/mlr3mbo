[{"path":"https://mlr3mbo.mlr-org.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lennart Schneider. Maintainer, author. Jakob Richter. Author. Marc Becker. Author. Michel Lang. Author. Bernd Bischl. Author. Martin Binder. Author. Julia Moosbauer. Author.","code":""},{"path":"https://mlr3mbo.mlr-org.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schneider L, Richter J, Becker M, Lang M, Bischl B, Binder M, Moosbauer J (2022). mlr3mbo: Flexible Bayesian Optimization R. https://mlr3mbo.mlr-org.com, https://github.com/mlr-org/mlr3mbo.","code":"@Manual{,   title = {mlr3mbo: Flexible Bayesian Optimization in R},   author = {Lennart Schneider and Jakob Richter and Marc Becker and Michel Lang and Bernd Bischl and Martin Binder and Julia Moosbauer},   year = {2022},   note = {https://mlr3mbo.mlr-org.com, https://github.com/mlr-org/mlr3mbo}, }"},{"path":"https://mlr3mbo.mlr-org.com/index.html","id":"mlr3mbo","dir":"","previous_headings":"","what":"Flexible Bayesian Optimization in R","title":"Flexible Bayesian Optimization in R","text":"new R6 much modular implementation single- multicriteria Bayesian optimization.","code":""},{"path":"https://mlr3mbo.mlr-org.com/index.html","id":"design","dir":"","previous_headings":"","what":"Design","title":"Flexible Bayesian Optimization in R","text":"mlr3mbo built modular relying following R6 classes: Surrogate: Surrogate Model AcqFunction: Acquisition Function AcqOptimizer: Acquisition Function Optimizer Based , Bayesian optimization loops can written, see, e.g., bayesopt_ego sequential single objective BO. mlr3mbo also provides OptimizerMbo class behaving like Optimizer bbotk package well TunerMbo class behaving like Tuner mlr3tuning package. mlr3mbo uses sensible defaults Surrogate, AcqFunction, AcqOptimizer, even loop function. See ?mbo_defaults details.","code":""},{"path":[]},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/index.html","id":"simple-optimization-example","dir":"","previous_headings":"","what":"Simple Optimization Example","title":"Flexible Bayesian Optimization in R","text":"Minimize y = x^2 via sequential singlecriteria BO using GP surrogate EI optimized via random search aquisition function: Note can also use bb_optimize shorthand:","code":"set.seed(1) library(bbotk) library(mlr3) library(mlr3mbo) library(paradox) library(mlr3learners)  obfun = ObjectiveRFun$new(   fun = function(xs) list(y1 = xs$x ^ 2),   domain = ps(x = p_dbl(lower = -5, upper = 5)),   codomain = ps(y1 = p_dbl(tags = \"minimize\")) )  terminator = trm(\"evals\", n_evals = 10)  instance = OptimInstanceSingleCrit$new(   objective = obfun,   terminator = terminator )  design = generate_design_lhs(obfun$domain, 4)$data instance$eval_batch(design)  surrogate = SurrogateLearner$new(lrn(\"regr.km\", control = list(trace = FALSE))) acqfun = AcqFunctionEI$new() acqopt = AcqOptimizer$new(   opt(\"random_search\", batch_size = 100),   terminator = trm(\"evals\", n_evals = 100) )  optimizer = opt(\"mbo\",   loop_function = bayesopt_ego,   surrogate = surrogate,   acq_function = acqfun,   acq_optimizer = acqopt ) optimizer$optimize(instance) ##             x  x_domain          y1 ## 1: 0.01948605 <list[1]> 0.000379706 set.seed(1)  fun = function(xs) list(y1 = xs$x ^ 2)  surrogate = SurrogateLearner$new(lrn(\"regr.km\", control = list(trace = FALSE))) acqfun = AcqFunctionEI$new() acqopt = AcqOptimizer$new(   opt(\"random_search\", batch_size = 100),   terminator = trm(\"evals\", n_evals = 100) ) optimizer = opt(\"mbo\",   loop_function = bayesopt_ego,   surrogate = surrogate,   acq_function = acqfun,   acq_optimizer = acqopt )  result = bb_optimize(   fun,   method = optimizer,   lower = c(x = -5),   upper = c(x = 5),   max_evals = 10 )"},{"path":"https://mlr3mbo.mlr-org.com/index.html","id":"simple-tuning-example-using-defaults","dir":"","previous_headings":"","what":"Simple Tuning Example Using Defaults","title":"Flexible Bayesian Optimization in R","text":"","code":"set.seed(1) library(mlr3) library(mlr3learners) library(mlr3tuning) library(mlr3mbo)  task = tsk(\"pima\")  learner = lrn(\"classif.rpart\", cp = to_tune(lower = 1e-04, upper = 1e-1, logscale = TRUE))  instance = tune(   method = \"mbo\",   task = task,   learner = learner,   resampling = rsmp(\"holdout\"),   measure = msr(\"classif.ce\"),   term_evals = 10 )  instance$result ##           cp learner_param_vals  x_domain classif.ce ## 1: -4.885851          <list[2]> <list[1]>  0.1914062"},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Acquisition Function Base Class — AcqFunction","title":"Acquisition Function Base Class — AcqFunction","text":"Based surrogate model, acquisition function encodes preference evaluate new point evaluation.","code":""},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Acquisition Function Base Class — AcqFunction","text":"bbotk::Objective -> AcqFunction","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Acquisition Function Base Class — AcqFunction","text":"direction (character(1)) Optimization direction acquisition function relative direction objective function bbotk::OptimInstance. Must \"\", \"minimize\", \"maximize\". surrogate_max_to_min (-1 | 1). Multiplicative factor correct minimization maximization acquisition function.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Acquisition Function Base Class — AcqFunction","text":"label (character(1)) Label object. man (character(1)) String format [pkg]::[topic] pointing manual page object. archive (bbotk::Archive) Points bbotk::Archive Surrogate. fun (function) Objective function. surrogate Surrogate.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Acquisition Function Base Class — AcqFunction","text":"bbotk::Objective$eval() bbotk::Objective$format() bbotk::Objective$print()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Acquisition Function Base Class — AcqFunction","text":"AcqFunction$new() AcqFunction$update() AcqFunction$eval_many() AcqFunction$eval_dt() AcqFunction$clone()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Acquisition Function Base Class — AcqFunction","text":"Creates new instance R6 class. Note surrogate can initialized lazy can later set via active binding.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Base Class — AcqFunction","text":"","code":"AcqFunction$new(   id,   constants = ParamSet$new(),   surrogate,   direction,   label = NA_character_,   man = NA_character_ )"},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acquisition Function Base Class — AcqFunction","text":"id (character(1)). constants (paradox::ParamSet). surrogate (NULL | Surrogate). direction (character(1)). label (character(1)) Label object. man (character(1)) String format [pkg]::[topic] pointing manual page object.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":"method-update-","dir":"Reference","previous_headings":"","what":"Method update()","title":"Acquisition Function Base Class — AcqFunction","text":"Update acquisition function.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Base Class — AcqFunction","text":"","code":"AcqFunction$update()"},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":"method-eval-many-","dir":"Reference","previous_headings":"","what":"Method eval_many()","title":"Acquisition Function Base Class — AcqFunction","text":"Evaluates multiple input values received list, converted data.table() objective function. Missing columns xss filled NAs xdt.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Base Class — AcqFunction","text":"","code":"AcqFunction$eval_many(xss)"},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acquisition Function Base Class — AcqFunction","text":"xss (list()) list lists contains multiple x values, e.g. list(list(x1 = 1, x2 = 2), list(x1 = 3, x2 = 4)).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Acquisition Function Base Class — AcqFunction","text":"data.table::data.table() contains one y-column single-criteria functions multiple y-columns multi-criteria functions, e.g. data.table(y = 1:2) data.table(y1 = 1:2, y2 = 3:4).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":"method-eval-dt-","dir":"Reference","previous_headings":"","what":"Method eval_dt()","title":"Acquisition Function Base Class — AcqFunction","text":"Evaluates multiple input values objective function supplied user.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Base Class — AcqFunction","text":"","code":"AcqFunction$eval_dt(xdt)"},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acquisition Function Base Class — AcqFunction","text":"xdt (data.table::data.table()) Set untransformed points / points search space. One point per row, e.g. data.table(x1 = c(1, 3), x2 = c(2, 4)). Column names match ids search_space. However, xdt can contain additional columns.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Acquisition Function Base Class — AcqFunction","text":"data.table::data.table()] contains one y-column single-criteria functions multiple y-columns multi-criteria functions, e.g. data.table(y = 1:2) data.table(y1 = 1:2, y2 = 3:4).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Acquisition Function Base Class — AcqFunction","text":"objects class cloneable method.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Base Class — AcqFunction","text":"","code":"AcqFunction$clone(deep = FALSE)"},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqFunction.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acquisition Function Base Class — AcqFunction","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqOptimizer.html","id":null,"dir":"Reference","previous_headings":"","what":"Acquisition Function Optimizer — AcqOptimizer","title":"Acquisition Function Optimizer — AcqOptimizer","text":"Optimizer AcqFunctions performs infill optimization. Wraps bbotk::Optimizer bbotk::Terminator.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqOptimizer.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Acquisition Function Optimizer — AcqOptimizer","text":"logging_level character(1) Logging level infill optimization. Can \"fatal\", \"error\", \"warn\", \"info\", \"debug\" \"trace\". Default \"warn\", .e., warnings logged. warmstart logical(1) infill optimization warm-started evaluating best point(s) present bbotk::Archive actual bbotk::OptimInstance? sensible using population based infill optimizer, e.g., local search mutation. Default FALSE. warmstart_size integer(1) | \"\" Number best points selected bbotk::Archive used warm starting. Can also \"\" use available points. relevant warmstart = TRUE. Default 1. skip_already_evaluated logical(1) can happen candidate resulting infill optimization already evaluated previous iteration. candidate proposal ignored next best point selected candidate? Default TRUE. catch_errors logical(1) errors infill optimization caught propagated loop_function can handle failed infill optimization appropriately , e.g., proposing randomly sampled point evaluation? Default TRUE.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqOptimizer.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Acquisition Function Optimizer — AcqOptimizer","text":"optimizer (bbotk::Optimizer). terminator (bbotk::Terminator). acq_function (AcqFunction).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqOptimizer.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Acquisition Function Optimizer — AcqOptimizer","text":"print_id (character) Id used printing. param_set (paradox::ParamSet) Set hyperparameters.","code":""},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqOptimizer.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Acquisition Function Optimizer — AcqOptimizer","text":"AcqOptimizer$new() AcqOptimizer$format() AcqOptimizer$print() AcqOptimizer$optimize() AcqOptimizer$clone()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqOptimizer.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Acquisition Function Optimizer — AcqOptimizer","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqOptimizer.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Optimizer — AcqOptimizer","text":"","code":"AcqOptimizer$new(optimizer, terminator, acq_function = NULL)"},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqOptimizer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acquisition Function Optimizer — AcqOptimizer","text":"optimizer (bbotk::Optimizer). terminator (bbotk::Terminator). acq_function (NULL | AcqFunction).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqOptimizer.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"Acquisition Function Optimizer — AcqOptimizer","text":"Helper print outputs.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqOptimizer.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Optimizer — AcqOptimizer","text":"","code":"AcqOptimizer$format()"},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqOptimizer.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Acquisition Function Optimizer — AcqOptimizer","text":"Print method.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqOptimizer.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Optimizer — AcqOptimizer","text":"","code":"AcqOptimizer$print()"},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqOptimizer.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Acquisition Function Optimizer — AcqOptimizer","text":"(character()).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqOptimizer.html","id":"method-optimize-","dir":"Reference","previous_headings":"","what":"Method optimize()","title":"Acquisition Function Optimizer — AcqOptimizer","text":"Optimize acquisition function.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqOptimizer.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Optimizer — AcqOptimizer","text":"","code":"AcqOptimizer$optimize()"},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqOptimizer.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Acquisition Function Optimizer — AcqOptimizer","text":"data.table::data.table() 1 row per optimum x columns.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqOptimizer.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Acquisition Function Optimizer — AcqOptimizer","text":"objects class cloneable method.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqOptimizer.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Optimizer — AcqOptimizer","text":"","code":"AcqOptimizer$clone(deep = FALSE)"},{"path":"https://mlr3mbo.mlr-org.com/reference/AcqOptimizer.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acquisition Function Optimizer — AcqOptimizer","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":null,"dir":"Reference","previous_headings":"","what":"Surrogate Model — Surrogate","title":"Surrogate Model — Surrogate","text":"Surrogate model.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Surrogate Model — Surrogate","text":"model Surrogate model.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Surrogate Model — Surrogate","text":"print_id (character) Id used printing. archive (bbotk::Archive). n_learner (integer(1)) Returns number learners. x_cols (character()). y_cols (character()). insample_perf (numeric()) Surrogate model's current insample performance. param_set (paradox::ParamSet) Set hyperparameters. assert_insample_perf (logical(1)) Asserts whether current insample performance meets performance threshold. packages (character) Set required packages. warning signaled constructor least one packages installed, loaded (attached) later -demand via 'requireNamespace()'. feature_types (character()) Stores feature types learner can handle, e.g. \"logical\", \"numeric\", \"factor\". complete list candidate feature types, grouped task type, stored mlr_reflections$task_feature_types. properties (character()) Stores set properties/capabilities learner . complete list candidate properties, grouped task type, stored mlr_reflections$learner_properties.","code":""},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Surrogate Model — Surrogate","text":"Surrogate$new() Surrogate$update() Surrogate$predict() Surrogate$format() Surrogate$print() Surrogate$clone()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Surrogate Model — Surrogate","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Surrogate Model — Surrogate","text":"","code":"Surrogate$new(model, archive, x_cols, y_cols, param_set)"},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Surrogate Model — Surrogate","text":"model (Model). archive (NULL | bbotk::Archive). x_cols (NULL | character()). y_cols (NULL | character()). param_set (paradox::ParamSet).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":"method-update-","dir":"Reference","previous_headings":"","what":"Method update()","title":"Surrogate Model — Surrogate","text":"Train model new data.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Surrogate Model — Surrogate","text":"","code":"Surrogate$update()"},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Surrogate Model — Surrogate","text":"NULL.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Surrogate Model — Surrogate","text":"Predict mean response standard error.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Surrogate Model — Surrogate","text":"","code":"Surrogate$predict(xdt)"},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Surrogate Model — Surrogate","text":"xdt (data.table::data.table()) New data.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Surrogate Model — Surrogate","text":"Arbitrary prediction object.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"Surrogate Model — Surrogate","text":"Helper print outputs.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Surrogate Model — Surrogate","text":"","code":"Surrogate$format()"},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Surrogate Model — Surrogate","text":"Print method.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Surrogate Model — Surrogate","text":"","code":"Surrogate$print()"},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Surrogate Model — Surrogate","text":"(character()).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Surrogate Model — Surrogate","text":"objects class cloneable method.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Surrogate Model — Surrogate","text":"","code":"Surrogate$clone(deep = FALSE)"},{"path":"https://mlr3mbo.mlr-org.com/reference/Surrogate.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Surrogate Model — Surrogate","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearner.html","id":null,"dir":"Reference","previous_headings":"","what":"Surrogate Model Containing a Single Learner — SurrogateLearner","title":"Surrogate Model Containing a Single Learner — SurrogateLearner","text":"Surrogate model containing single mlr3::LearnerRegr.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearner.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Surrogate Model Containing a Single Learner — SurrogateLearner","text":"calc_insample_perf logical(1) insample performance mlr3::LearnerRegr asserted updating surrogate? assertion fails (.e., insample performance based perf_measure meet perf_threshold), error thrown. Default FALSE. perf_measure mlr3::MeasureRegr Performance measure use assert insample performance mlr3::LearnerRegr. relevant calc_insample_perf = TRUE. Default mlr3::mlr_measures_regr.rsq. perf_threshold numeric(1) Threshold insample performance mlr3::LearnerRegr asserted . relevant calc_insample_perf = TRUE. Default 0. catch_errors logical(1) errors updating surrogate caught propagated loop_function can handle failed infill optimization (result failed surrogate) appropriately , e.g., proposing randomly sampled point evaluation? Default TRUE.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearner.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Surrogate Model Containing a Single Learner — SurrogateLearner","text":"mlr3mbo::Surrogate -> SurrogateLearner","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearner.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Surrogate Model Containing a Single Learner — SurrogateLearner","text":"print_id (character) Id used printing. n_learner (integer(1)) Returns number mlr3::Learners. assert_insample_perf (numeric(1)) Asserts whether current insample performance meets performance threshold. packages (character()) Set required packages. feature_types (character()) Stores feature types learner can handle, e.g. \"logical\", \"numeric\", \"factor\". complete list candidate feature types, grouped task type, stored mlr_reflections$task_feature_types. properties (character()) Stores set properties/capabilities learner . complete list candidate properties, grouped task type, stored mlr_reflections$learner_properties.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearner.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Surrogate Model Containing a Single Learner — SurrogateLearner","text":"mlr3mbo::Surrogate$format() mlr3mbo::Surrogate$print() mlr3mbo::Surrogate$update()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearner.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Surrogate Model Containing a Single Learner — SurrogateLearner","text":"SurrogateLearner$new() SurrogateLearner$predict() SurrogateLearner$clone()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearner.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Surrogate Model Containing a Single Learner — SurrogateLearner","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearner.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Surrogate Model Containing a Single Learner — SurrogateLearner","text":"","code":"SurrogateLearner$new(learner, archive = NULL, x_cols = NULL, y_col = NULL)"},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Surrogate Model Containing a Single Learner — SurrogateLearner","text":"learner (mlr3::LearnerRegr). archive (NULL | bbotk::Archive). x_cols (NULL | character()). y_col (NULL | character(1)).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearner.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Surrogate Model Containing a Single Learner — SurrogateLearner","text":"Returns mean response standard error.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearner.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Surrogate Model Containing a Single Learner — SurrogateLearner","text":"","code":"SurrogateLearner$predict(xdt)"},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearner.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Surrogate Model Containing a Single Learner — SurrogateLearner","text":"xdt (data.table::data.table()) New data.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearner.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Surrogate Model Containing a Single Learner — SurrogateLearner","text":"data.table::data.table() columns mean se.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearner.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Surrogate Model Containing a Single Learner — SurrogateLearner","text":"objects class cloneable method.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearner.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Surrogate Model Containing a Single Learner — SurrogateLearner","text":"","code":"SurrogateLearner$clone(deep = FALSE)"},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearner.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Surrogate Model Containing a Single Learner — SurrogateLearner","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearnerCollection.html","id":null,"dir":"Reference","previous_headings":"","what":"Surrogate Model Containing Multiple Learners — SurrogateLearnerCollection","title":"Surrogate Model Containing Multiple Learners — SurrogateLearnerCollection","text":"Surrogate model containing multiple mlr3::LearnerRegr. mlr3::LearnerRegr fit target variables indicated via y_cols. Note redundant mlr3::LearnerRegr must deep clones.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearnerCollection.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Surrogate Model Containing Multiple Learners — SurrogateLearnerCollection","text":"calc_insample_perf logical(1) insample performance mlr3::LearnerRegr asserted updating surrogate? assertion fails (.e., insample performance based perf_measure meet perf_threshold), error thrown. Default FALSE. perf_measure List mlr3::MeasureRegr Performance measures use assert insample performance mlr3::LearnerRegr. relevant calc_insample_perf = TRUE. Default mlr3::mlr_measures_regr.rsq learner. perf_threshold List numeric(1) Thresholds insample performance mlr3::LearnerRegr asserted . relevant calc_insample_perf = TRUE. Default 0 learner. catch_errors logical(1) errors updating surrogate caught propagated loop_function can handle failed infill optimization (result failed surrogate) appropriately , e.g., proposing randomly sampled point evaluation? Default TRUE.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearnerCollection.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Surrogate Model Containing Multiple Learners — SurrogateLearnerCollection","text":"mlr3mbo::Surrogate -> SurrogateLearnerCollection","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearnerCollection.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Surrogate Model Containing Multiple Learners — SurrogateLearnerCollection","text":"print_id (character) Id used printing. n_learner (integer(1)) Returns number mlr3::Learners. assert_insample_perf (numeric()) Asserts whether current insample performance meets performance threshold. packages (character()) Set required packages. feature_types (character()) Stores feature types learner can handle, e.g. \"logical\", \"numeric\", \"factor\". complete list candidate feature types, grouped task type, stored mlr_reflections$task_feature_types. properties (character()) Stores set properties/capabilities learner . complete list candidate properties, grouped task type, stored mlr_reflections$learner_properties.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearnerCollection.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Surrogate Model Containing Multiple Learners — SurrogateLearnerCollection","text":"mlr3mbo::Surrogate$format() mlr3mbo::Surrogate$print() mlr3mbo::Surrogate$update()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearnerCollection.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Surrogate Model Containing Multiple Learners — SurrogateLearnerCollection","text":"SurrogateLearnerCollection$new() SurrogateLearnerCollection$predict() SurrogateLearnerCollection$clone()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearnerCollection.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Surrogate Model Containing Multiple Learners — SurrogateLearnerCollection","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearnerCollection.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Surrogate Model Containing Multiple Learners — SurrogateLearnerCollection","text":"","code":"SurrogateLearnerCollection$new(   learners,   archive = NULL,   x_cols = NULL,   y_cols = NULL )"},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearnerCollection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Surrogate Model Containing Multiple Learners — SurrogateLearnerCollection","text":"learners (list mlr3::LearnerRegr). archive (NULL | bbotk::Archive). x_cols (NULL | character()). y_cols (NULL | character()).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearnerCollection.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Surrogate Model Containing Multiple Learners — SurrogateLearnerCollection","text":"Returns named list data.tables. contains mean response standard error one y_col.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearnerCollection.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Surrogate Model Containing Multiple Learners — SurrogateLearnerCollection","text":"","code":"SurrogateLearnerCollection$predict(xdt)"},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearnerCollection.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Surrogate Model Containing Multiple Learners — SurrogateLearnerCollection","text":"xdt (data.table::data.table()) New data.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearnerCollection.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Surrogate Model Containing Multiple Learners — SurrogateLearnerCollection","text":"list data.table::data.table()s columns mean se.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearnerCollection.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Surrogate Model Containing Multiple Learners — SurrogateLearnerCollection","text":"objects class cloneable method.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearnerCollection.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Surrogate Model Containing Multiple Learners — SurrogateLearnerCollection","text":"","code":"SurrogateLearnerCollection$clone(deep = FALSE)"},{"path":"https://mlr3mbo.mlr-org.com/reference/SurrogateLearnerCollection.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Surrogate Model Containing Multiple Learners — SurrogateLearnerCollection","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/acqf.html","id":null,"dir":"Reference","previous_headings":"","what":"Syntactic Sugar Acquisition Function Construction — acqf","title":"Syntactic Sugar Acquisition Function Construction — acqf","text":"function complements mlr_acqfunctions functions spirit mlr_sugar mlr3.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/acqf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syntactic Sugar Acquisition Function Construction — acqf","text":"","code":"acqf(.key, ...)"},{"path":"https://mlr3mbo.mlr-org.com/reference/acqf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syntactic Sugar Acquisition Function Construction — acqf","text":".key (character(1)) Key passed respective dictionary retrieve object. ... (named list()) Named arguments passed constructor, set parameters paradox::ParamSet, set public field. See mlr3misc::dictionary_sugar_get() details.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/acqf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Syntactic Sugar Acquisition Function Construction — acqf","text":"AcqFunction","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/acqf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Syntactic Sugar Acquisition Function Construction — acqf","text":"","code":"acqf(\"ei\") #> <AcqFunctionEI:acq_ei> #> Domain: #> <ParamSet> #> Empty. #> Codomain: #> <Codomain> #> Empty."},{"path":"https://mlr3mbo.mlr-org.com/reference/acqo.html","id":null,"dir":"Reference","previous_headings":"","what":"Syntactic Sugar Acquisition Function Optimizer Construction — acqo","title":"Syntactic Sugar Acquisition Function Optimizer Construction — acqo","text":"function allows construct AcqOptimizer spirit mlr_sugar mlr3.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/acqo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syntactic Sugar Acquisition Function Optimizer Construction — acqo","text":"","code":"acqo(optimizer, terminator, acq_function = NULL, ...)"},{"path":"https://mlr3mbo.mlr-org.com/reference/acqo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syntactic Sugar Acquisition Function Optimizer Construction — acqo","text":"optimizer (bbotk::Optimizer)bbotk::Optimizer used. terminator (bbotk::Terminator)bbotk::Terminator used. acq_function (NULL | AcqFunction)AcqFunction used. Can also NULL. ... (named list()) Named arguments passed constructor, set parameters paradox::ParamSet.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/acqo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Syntactic Sugar Acquisition Function Optimizer Construction — acqo","text":"AcqOptimizer","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/acqo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Syntactic Sugar Acquisition Function Optimizer Construction — acqo","text":"","code":"library(bbotk) acqo(opt(\"random_search\"), trm(\"evals\"), catch_errors = FALSE) #> <AcqOptimizer>: (OptimizerRandomSearch | TerminatorEvals) #> * Parameters: logging_level=warn, warmstart=FALSE, #>   skip_already_evaluated=TRUE, catch_errors=FALSE"},{"path":"https://mlr3mbo.mlr-org.com/reference/default_acqfun.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Acquisition Function — default_acqfun","title":"Default Acquisition Function — default_acqfun","text":"Chooses default acquisition function, .e. criterion used propose future points.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/default_acqfun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Acquisition Function — default_acqfun","text":"","code":"default_acqfun(instance)"},{"path":"https://mlr3mbo.mlr-org.com/reference/default_acqfun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Acquisition Function — default_acqfun","text":"instance (bbotk::OptimInstance).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/default_acqfun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default Acquisition Function — default_acqfun","text":"AcqFunction","code":""},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/reference/default_acqopt.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Acquisition Function Optimizer — default_acqopt","title":"Default Acquisition Function Optimizer — default_acqopt","text":"Chooses default acquisition function optimizer. Defaults wrapping bbotk::OptimizerRandomSearch allowing 1000 function evaluations.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/default_acqopt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Acquisition Function Optimizer — default_acqopt","text":"","code":"default_acqopt(acq_function)"},{"path":"https://mlr3mbo.mlr-org.com/reference/default_acqopt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Acquisition Function Optimizer — default_acqopt","text":"acq_function (AcqFunction).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/default_acqopt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default Acquisition Function Optimizer — default_acqopt","text":"AcqOptimizer","code":""},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/reference/default_loopfun.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Loop Function — default_loopfun","title":"Default Loop Function — default_loopfun","text":"Chooses default \"loopfun\", .e. MBO flavor used optimization. single-criteria optimization, defaults bayesopt_ego. multi-criteria optimization, defaults bayesopt_smsego.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/default_loopfun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Loop Function — default_loopfun","text":"","code":"default_loopfun(instance)"},{"path":"https://mlr3mbo.mlr-org.com/reference/default_loopfun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Loop Function — default_loopfun","text":"instance (bbotk::OptimInstance) object inherits bbotk::OptimInstance.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/default_loopfun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default Loop Function — default_loopfun","text":"loop function","code":""},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/reference/default_surrogate.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Surrogate — default_surrogate","title":"Default Surrogate — default_surrogate","text":"helper function generates default Surrogate based properties bbotk::OptimInstance. numeric-(including integers) parameter spaces without dependencies: Kriging model “\"regr.km\"” kernel “\"matern3_2\"” created. objective function deterministic add small nugget effect (10^-8*Var(y), y vector observed outcomes current design) increase numerical stability hopefully prevent crashes DiceKriging. Whether objective function deterministic can observed objective function's properties. objective function noisy nugget effect estimated nugget.estim = TRUE. Also jitter set TRUE circumvent problem DiceKriging already trained input values produce exact trained output. Whether objective function noisy can observed objective functions properties. Instead default \"BFGS\" optimization method use rgenoud (\"gen\"), hybrid algorithm, combine global search based genetic algorithms local search based gradients. may improve model fit less frequently produce constant surrogate model. mixed numeric-categorical parameter spaces, spaces conditional parameters: ranger regression forest “\"regr.ranger\"” 500 trees created. standard error prediction (required infill criterion) estimated via jackknife. se.method = \"jack\" option “\"regr.ranger\"” learner (default). case, learners encapsulated using “\"evaluate\"”, fallback learner set, cases surrogate learner errors. Currently, following learner used fallback: lrn(\"regr.ranger\", num.trees = 20L, keep.inbag = TRUE, se.method = \"jack\"). additionally dependencies present parameter space, inactive conditional parameters represented missing NA values training design data. simply handle imputation method, added ranger random forest, concretely use po(\"imputesample\") (logicals) po(\"imputeoor\") (anything else) package mlr3pipelines. range imputation makes sense tree-based methods usually hard beat, see Ding et al. (2010). case dependencies, following learner used fallback: lrn(\"regr.featureless\"). instance class bbotk::OptimInstanceSingleCrit learner wrapped SurrogateLearner. instance class bbotk::OptimInstanceMultiCrit deep clones learner wrapped SurrogateLearnerCollection.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/default_surrogate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Surrogate — default_surrogate","text":"","code":"default_surrogate(instance, learner = NULL, n_learner = NULL)"},{"path":"https://mlr3mbo.mlr-org.com/reference/default_surrogate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Surrogate — default_surrogate","text":"instance (bbotk::OptimInstance) object inherits bbotk::OptimInstance. learner (NULL | mlr3::Learner). n_learner (NULL | integer(1)).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/default_surrogate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default Surrogate — default_surrogate","text":"Surrogate","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/default_surrogate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Default Surrogate — default_surrogate","text":"Ding, Yufeng, Simonoff, S J (2010). “investigation missing data methods classification trees applied binary response data.” Journal Machine Learning Research, 11(1), 131--170.","code":""},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/reference/mbo_defaults.html","id":null,"dir":"Reference","previous_headings":"","what":"Defaults for OptimizerMbo — mbo_defaults","title":"Defaults for OptimizerMbo — mbo_defaults","text":"following defaults set OptimizerMbo optimization respective fields set initialization. Optimization Loop: default_loopfun Surrogate: default_surrogate Acquisition Function: default_acqfun Acqfun Optimizer: default_acqopt","code":""},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr3mbo-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mlr3mbo: Flexible Bayesian Optimization in R — mlr3mbo-package","title":"mlr3mbo: Flexible Bayesian Optimization in R — mlr3mbo-package","text":"modern flexible approach Bayesian Optimization R.","code":""},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr3mbo-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mlr3mbo: Flexible Bayesian Optimization in R — mlr3mbo-package","text":"Maintainer: Lennart Schneider lennart.sch@web.de (ORCID) Authors: Jakob Richter jakob1richter@gmail.com (ORCID) Marc Becker marcbecker@posteo.de (ORCID) Michel Lang michellang@gmail.com (ORCID) Bernd Bischl bernd_bischl@gmx.net (ORCID) Martin Binder mlr.developer@mb706.com Julia Moosbauer ju.moosbauer@gmail.com","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions.html","id":null,"dir":"Reference","previous_headings":"","what":"Dictionary of Acquisition Functions — mlr_acqfunctions","title":"Dictionary of Acquisition Functions — mlr_acqfunctions","text":"simple mlr3misc::Dictionary storing objects class AcqFunction. acquisition function associated help page, see mlr_acqfunctions_[id]. convenient way retrieve construct acquisition function, see acqf().","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dictionary of Acquisition Functions — mlr_acqfunctions","text":"R6::R6Class object inheriting mlr3misc::Dictionary.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Dictionary of Acquisition Functions — mlr_acqfunctions","text":"See mlr3misc::Dictionary.","code":""},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dictionary of Acquisition Functions — mlr_acqfunctions","text":"","code":"as.data.table(mlr_acqfunctions) #>        key                           label                               man #> 1:     aei  Augmented Expected Improvement     mlr3mbo::mlr_acqfunctions_aei #> 2:      cb  Lower / Upper Confidence Bound      mlr3mbo::mlr_acqfunctions_cb #> 3:      ei            Expected Improvement      mlr3mbo::mlr_acqfunctions_ei #> 4:    eips Expected Improvement Per Second    mlr3mbo::mlr_acqfunctions_eips #> 5:      pi      Probability Of Improvement      mlr3mbo::mlr_acqfunctions_pi #> 6: sms_ego                         SMS EGO mlr3mbo::mlr_acqfunctions_sms_ego acqf(\"ei\") #> <AcqFunctionEI:acq_ei> #> Domain: #> <ParamSet> #> Empty. #> Codomain: #> <Codomain> #> Empty."},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_aei.html","id":null,"dir":"Reference","previous_headings":"","what":"Acquisition Function Augmented Expected Improvement — mlr_acqfunctions_aei","title":"Acquisition Function Augmented Expected Improvement — mlr_acqfunctions_aei","text":"Augmented Expected Improvement.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_aei.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Acquisition Function Augmented Expected Improvement — mlr_acqfunctions_aei","text":"AcqFunction can instantiated via dictionary mlr_acqfunctions associated sugar function acqf():","code":"mlr_acqfunctions$get(\"aei\") acqf(\"aei\")"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_aei.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Acquisition Function Augmented Expected Improvement — mlr_acqfunctions_aei","text":"\"c\" (numeric(1)) Constant \\(c\\) used formula (14) Huang 2012 reflect degree risk aversion. Defaults 1.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_aei.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Acquisition Function Augmented Expected Improvement — mlr_acqfunctions_aei","text":"Huang D, Allen TT, Notz WI, Zheng N (2012). “Erratum : Global optimization stochastic black-box systems via sequential kriging meta-models.” Journal Global Optimization, 54(2), 431--431.","code":""},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_aei.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Acquisition Function Augmented Expected Improvement — mlr_acqfunctions_aei","text":"bbotk::Objective -> mlr3mbo::AcqFunction -> AcqFunctionAEI","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_aei.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Acquisition Function Augmented Expected Improvement — mlr_acqfunctions_aei","text":"y_effective_best (numeric(1)). noise_var (numeric(1)).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_aei.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Acquisition Function Augmented Expected Improvement — mlr_acqfunctions_aei","text":"bbotk::Objective$eval() bbotk::Objective$format() bbotk::Objective$print() mlr3mbo::AcqFunction$eval_dt() mlr3mbo::AcqFunction$eval_many()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_aei.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Acquisition Function Augmented Expected Improvement — mlr_acqfunctions_aei","text":"AcqFunctionAEI$new() AcqFunctionAEI$update() AcqFunctionAEI$clone()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_aei.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Acquisition Function Augmented Expected Improvement — mlr_acqfunctions_aei","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_aei.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Augmented Expected Improvement — mlr_acqfunctions_aei","text":"","code":"AcqFunctionAEI$new(surrogate = NULL, c = 1)"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_aei.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acquisition Function Augmented Expected Improvement — mlr_acqfunctions_aei","text":"surrogate (NULL | SurrogateLearner). c (numeric(1)).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_aei.html","id":"method-update-","dir":"Reference","previous_headings":"","what":"Method update()","title":"Acquisition Function Augmented Expected Improvement — mlr_acqfunctions_aei","text":"Updates acquisition function sets y_effective_best.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_aei.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Augmented Expected Improvement — mlr_acqfunctions_aei","text":"","code":"AcqFunctionAEI$update()"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_aei.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Acquisition Function Augmented Expected Improvement — mlr_acqfunctions_aei","text":"objects class cloneable method.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_aei.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Augmented Expected Improvement — mlr_acqfunctions_aei","text":"","code":"AcqFunctionAEI$clone(deep = FALSE)"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_aei.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acquisition Function Augmented Expected Improvement — mlr_acqfunctions_aei","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_cb.html","id":null,"dir":"Reference","previous_headings":"","what":"Acquisition Function Confidence Bound — mlr_acqfunctions_cb","title":"Acquisition Function Confidence Bound — mlr_acqfunctions_cb","text":"Confidence Bound.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_cb.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Acquisition Function Confidence Bound — mlr_acqfunctions_cb","text":"AcqFunction can instantiated via dictionary mlr_acqfunctions associated sugar function acqf():","code":"mlr_acqfunctions$get(\"cb\") acqf(\"cb\")"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_cb.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Acquisition Function Confidence Bound — mlr_acqfunctions_cb","text":"\"lambda\" (numeric(1)) \\(\\lambda\\) value used confidence bound. Defaults 2.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_cb.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Acquisition Function Confidence Bound — mlr_acqfunctions_cb","text":"Snoek, Jasper, Larochelle, Hugo, Adams, P R (2012). “Practical Bayesian Optimization Machine Learning Algorithms.” Pereira F, Burges CJC, Bottou L, Weinberger KQ (eds.), Advances Neural Information Processing Systems, volume 25, 2951--2959.","code":""},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_cb.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Acquisition Function Confidence Bound — mlr_acqfunctions_cb","text":"bbotk::Objective -> mlr3mbo::AcqFunction -> AcqFunctionCB","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_cb.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Acquisition Function Confidence Bound — mlr_acqfunctions_cb","text":"bbotk::Objective$eval() bbotk::Objective$format() bbotk::Objective$print() mlr3mbo::AcqFunction$eval_dt() mlr3mbo::AcqFunction$eval_many() mlr3mbo::AcqFunction$update()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_cb.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Acquisition Function Confidence Bound — mlr_acqfunctions_cb","text":"AcqFunctionCB$new() AcqFunctionCB$clone()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_cb.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Acquisition Function Confidence Bound — mlr_acqfunctions_cb","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_cb.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Confidence Bound — mlr_acqfunctions_cb","text":"","code":"AcqFunctionCB$new(surrogate = NULL, lambda = 2)"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_cb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acquisition Function Confidence Bound — mlr_acqfunctions_cb","text":"surrogate (NULL | SurrogateLearner). lambda (numeric(1)).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_cb.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Acquisition Function Confidence Bound — mlr_acqfunctions_cb","text":"objects class cloneable method.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_cb.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Confidence Bound — mlr_acqfunctions_cb","text":"","code":"AcqFunctionCB$clone(deep = FALSE)"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_cb.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acquisition Function Confidence Bound — mlr_acqfunctions_cb","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_ei.html","id":null,"dir":"Reference","previous_headings":"","what":"Acquisition Function Expected Improvement — mlr_acqfunctions_ei","title":"Acquisition Function Expected Improvement — mlr_acqfunctions_ei","text":"Expected Improvement.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_ei.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Acquisition Function Expected Improvement — mlr_acqfunctions_ei","text":"AcqFunction can instantiated via dictionary mlr_acqfunctions associated sugar function acqf():","code":"mlr_acqfunctions$get(\"ei\") acqf(\"ei\")"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_ei.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Acquisition Function Expected Improvement — mlr_acqfunctions_ei","text":"Jones, R. D, Schonlau, Matthias, Welch, J. W (1998). “Efficient Global Optimization Expensive Black-Box Functions.” Journal Global optimization, 13(4), 455--492.","code":""},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_ei.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Acquisition Function Expected Improvement — mlr_acqfunctions_ei","text":"bbotk::Objective -> mlr3mbo::AcqFunction -> AcqFunctionEI","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_ei.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Acquisition Function Expected Improvement — mlr_acqfunctions_ei","text":"y_best (numeric(1)).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_ei.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Acquisition Function Expected Improvement — mlr_acqfunctions_ei","text":"bbotk::Objective$eval() bbotk::Objective$format() bbotk::Objective$print() mlr3mbo::AcqFunction$eval_dt() mlr3mbo::AcqFunction$eval_many()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_ei.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Acquisition Function Expected Improvement — mlr_acqfunctions_ei","text":"AcqFunctionEI$new() AcqFunctionEI$update() AcqFunctionEI$clone()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_ei.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Acquisition Function Expected Improvement — mlr_acqfunctions_ei","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_ei.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Expected Improvement — mlr_acqfunctions_ei","text":"","code":"AcqFunctionEI$new(surrogate = NULL)"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_ei.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acquisition Function Expected Improvement — mlr_acqfunctions_ei","text":"surrogate (NULL | SurrogateLearner).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_ei.html","id":"method-update-","dir":"Reference","previous_headings":"","what":"Method update()","title":"Acquisition Function Expected Improvement — mlr_acqfunctions_ei","text":"Updates acquisition function sets y_best.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_ei.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Expected Improvement — mlr_acqfunctions_ei","text":"","code":"AcqFunctionEI$update()"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_ei.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Acquisition Function Expected Improvement — mlr_acqfunctions_ei","text":"objects class cloneable method.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_ei.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Expected Improvement — mlr_acqfunctions_ei","text":"","code":"AcqFunctionEI$clone(deep = FALSE)"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_ei.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acquisition Function Expected Improvement — mlr_acqfunctions_ei","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_eips.html","id":null,"dir":"Reference","previous_headings":"","what":"Acquisition Function Expected Improvement Per Second — mlr_acqfunctions_eips","title":"Acquisition Function Expected Improvement Per Second — mlr_acqfunctions_eips","text":"Expected improvement per second. assumed calculations performed bbotk::OptimInstanceSingleCrit. Additionally target values codomain minimized maximized, bbotk::Objective bbotk::OptimInstanceSingleCrit return time values. column names target variable time variable must passed y_cols order (target, time) constructing SurrogateLearnerCollection used surrogate.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_eips.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Acquisition Function Expected Improvement Per Second — mlr_acqfunctions_eips","text":"AcqFunction can instantiated via dictionary mlr_acqfunctions associated sugar function acqf():","code":"mlr_acqfunctions$get(\"eips\") acqf(\"eips\")"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_eips.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Acquisition Function Expected Improvement Per Second — mlr_acqfunctions_eips","text":"Snoek, Jasper, Larochelle, Hugo, Adams, P R (2012). “Practical Bayesian Optimization Machine Learning Algorithms.” Pereira F, Burges CJC, Bottou L, Weinberger KQ (eds.), Advances Neural Information Processing Systems, volume 25, 2951--2959.","code":""},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_eips.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Acquisition Function Expected Improvement Per Second — mlr_acqfunctions_eips","text":"bbotk::Objective -> mlr3mbo::AcqFunction -> AcqFunctionEIPS","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_eips.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Acquisition Function Expected Improvement Per Second — mlr_acqfunctions_eips","text":"y_best (numeric(1)).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_eips.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Acquisition Function Expected Improvement Per Second — mlr_acqfunctions_eips","text":"y_col (character(1)). time_col (character(1)).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_eips.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Acquisition Function Expected Improvement Per Second — mlr_acqfunctions_eips","text":"bbotk::Objective$eval() bbotk::Objective$format() bbotk::Objective$print() mlr3mbo::AcqFunction$eval_dt() mlr3mbo::AcqFunction$eval_many()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_eips.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Acquisition Function Expected Improvement Per Second — mlr_acqfunctions_eips","text":"AcqFunctionEIPS$new() AcqFunctionEIPS$update() AcqFunctionEIPS$clone()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_eips.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Acquisition Function Expected Improvement Per Second — mlr_acqfunctions_eips","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_eips.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Expected Improvement Per Second — mlr_acqfunctions_eips","text":"","code":"AcqFunctionEIPS$new(surrogate = NULL)"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_eips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acquisition Function Expected Improvement Per Second — mlr_acqfunctions_eips","text":"surrogate (NULL | SurrogateLearnerCollection).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_eips.html","id":"method-update-","dir":"Reference","previous_headings":"","what":"Method update()","title":"Acquisition Function Expected Improvement Per Second — mlr_acqfunctions_eips","text":"Updates acquisition function sets y_best.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_eips.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Expected Improvement Per Second — mlr_acqfunctions_eips","text":"","code":"AcqFunctionEIPS$update()"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_eips.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Acquisition Function Expected Improvement Per Second — mlr_acqfunctions_eips","text":"objects class cloneable method.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_eips.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Expected Improvement Per Second — mlr_acqfunctions_eips","text":"","code":"AcqFunctionEIPS$clone(deep = FALSE)"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_eips.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acquisition Function Expected Improvement Per Second — mlr_acqfunctions_eips","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_pi.html","id":null,"dir":"Reference","previous_headings":"","what":"Acquisition Function Probability of Improvement — mlr_acqfunctions_pi","title":"Acquisition Function Probability of Improvement — mlr_acqfunctions_pi","text":"Probability Improvement.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_pi.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Acquisition Function Probability of Improvement — mlr_acqfunctions_pi","text":"AcqFunction can instantiated via dictionary mlr_acqfunctions associated sugar function acqf():","code":"mlr_acqfunctions$get(\"pi\") acqf(\"pi\")"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_pi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Acquisition Function Probability of Improvement — mlr_acqfunctions_pi","text":"Kushner, J. H (1964). “New Method Locating Maximum Point Arbitrary Multipeak Curve Presence Noise.” Journal Basic Engineering, 86(1), 97--106.","code":""},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_pi.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Acquisition Function Probability of Improvement — mlr_acqfunctions_pi","text":"bbotk::Objective -> mlr3mbo::AcqFunction -> AcqFunctionPI","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_pi.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Acquisition Function Probability of Improvement — mlr_acqfunctions_pi","text":"y_best (numeric()).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_pi.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Acquisition Function Probability of Improvement — mlr_acqfunctions_pi","text":"bbotk::Objective$eval() bbotk::Objective$format() bbotk::Objective$print() mlr3mbo::AcqFunction$eval_dt() mlr3mbo::AcqFunction$eval_many()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_pi.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Acquisition Function Probability of Improvement — mlr_acqfunctions_pi","text":"AcqFunctionPI$new() AcqFunctionPI$update() AcqFunctionPI$clone()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_pi.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Acquisition Function Probability of Improvement — mlr_acqfunctions_pi","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_pi.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Probability of Improvement — mlr_acqfunctions_pi","text":"","code":"AcqFunctionPI$new(surrogate = NULL)"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_pi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acquisition Function Probability of Improvement — mlr_acqfunctions_pi","text":"surrogate (NULL | SurrogateLearner).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_pi.html","id":"method-update-","dir":"Reference","previous_headings":"","what":"Method update()","title":"Acquisition Function Probability of Improvement — mlr_acqfunctions_pi","text":"Updates acquisition function sets y_best.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_pi.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Probability of Improvement — mlr_acqfunctions_pi","text":"","code":"AcqFunctionPI$update()"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_pi.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Acquisition Function Probability of Improvement — mlr_acqfunctions_pi","text":"objects class cloneable method.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_pi.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function Probability of Improvement — mlr_acqfunctions_pi","text":"","code":"AcqFunctionPI$clone(deep = FALSE)"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_pi.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acquisition Function Probability of Improvement — mlr_acqfunctions_pi","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_sms_ego.html","id":null,"dir":"Reference","previous_headings":"","what":"Acquisition Function SMS EGO — mlr_acqfunctions_sms_ego","title":"Acquisition Function SMS EGO — mlr_acqfunctions_sms_ego","text":"S-Metric Selection Evolutionary Multiobjective Optimization Algorithm.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_sms_ego.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Acquisition Function SMS EGO — mlr_acqfunctions_sms_ego","text":"\"lambda\" (numeric(1)) \\(\\lambda\\) value used confidence bound. Defaults 1. Based confidence = (1 - 2 * dnorm(lambda)) ^ m can calculate lambda given confidence level, see Ponweiser et al. 2008. \"epsilon\" (numeric(1)) \\(\\epsilon\\) used additive epsilon dominance. Can either single numeric value > 0 NULL. case NULL, epsilon vector maintained dynamically described Horn et al. 2015.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_sms_ego.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Acquisition Function SMS EGO — mlr_acqfunctions_sms_ego","text":"Ponweiser, Wolfgang, Wagner, Tobias, Biermann, Dirk, Vincze, Markus (2008). “Multiobjective Optimization Limited Budget Evaluations Using Model-Assisted S-Metric Selection.” Proceedings 10th International Conference Parallel Problem Solving Nature, 784--794. Horn, Daniel, Wagner, Tobias, Biermann, Dirk, Weihs, Claus, Bischl, Bernd (2015). “Model-Based Multi-objective Optimization: Taxonomy, Multi-Point Proposal, Toolbox Benchmark.” International Conference Evolutionary Multi-Criterion Optimization, 64--78.","code":""},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_sms_ego.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Acquisition Function SMS EGO — mlr_acqfunctions_sms_ego","text":"bbotk::Objective -> mlr3mbo::AcqFunction -> AcqFunctionSmsEgo","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_sms_ego.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Acquisition Function SMS EGO — mlr_acqfunctions_sms_ego","text":"ys_front (matrix()). ref_point (numeric()). epsilon (numeric()). progress (numeric(1)).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_sms_ego.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Acquisition Function SMS EGO — mlr_acqfunctions_sms_ego","text":"bbotk::Objective$eval() bbotk::Objective$format() bbotk::Objective$print() mlr3mbo::AcqFunction$eval_dt() mlr3mbo::AcqFunction$eval_many()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_sms_ego.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Acquisition Function SMS EGO — mlr_acqfunctions_sms_ego","text":"AcqFunctionSmsEgo$new() AcqFunctionSmsEgo$update() AcqFunctionSmsEgo$clone()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_sms_ego.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Acquisition Function SMS EGO — mlr_acqfunctions_sms_ego","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_sms_ego.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function SMS EGO — mlr_acqfunctions_sms_ego","text":"","code":"AcqFunctionSmsEgo$new(surrogate = NULL, lambda = 1, epsilon = NULL)"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_sms_ego.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acquisition Function SMS EGO — mlr_acqfunctions_sms_ego","text":"surrogate (NULL | SurrogateLearnerCollection). lambda (numeric(1)). epsilon (NULL | numeric(1)).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_sms_ego.html","id":"method-update-","dir":"Reference","previous_headings":"","what":"Method update()","title":"Acquisition Function SMS EGO — mlr_acqfunctions_sms_ego","text":"Updates acquisition function sets ys_front, ref_point, epsilon.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_sms_ego.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function SMS EGO — mlr_acqfunctions_sms_ego","text":"","code":"AcqFunctionSmsEgo$update()"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_sms_ego.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Acquisition Function SMS EGO — mlr_acqfunctions_sms_ego","text":"objects class cloneable method.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_sms_ego.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquisition Function SMS EGO — mlr_acqfunctions_sms_ego","text":"","code":"AcqFunctionSmsEgo$clone(deep = FALSE)"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_acqfunctions_sms_ego.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acquisition Function SMS EGO — mlr_acqfunctions_sms_ego","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Dictionary of Loop Functions — mlr_loop_functions","title":"Dictionary of Loop Functions — mlr_loop_functions","text":"simple mlr3misc::Dictionary storing objects class loop_function. loop function associated help page, see mlr_loop_functions_[id]. Retrieves object key key dictionary. Additional arguments must named passed constructor stored object.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dictionary of Loop Functions — mlr_loop_functions","text":"R6::R6Class object inheriting mlr3misc::Dictionary.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dictionary of Loop Functions — mlr_loop_functions","text":"key (character(1)). ... () Passed constructor.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dictionary of Loop Functions — mlr_loop_functions","text":"Object corresponding key.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Dictionary of Loop Functions — mlr_loop_functions","text":"See mlr3misc::Dictionary.","code":""},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dictionary of Loop Functions — mlr_loop_functions","text":"","code":"as.data.table(mlr_loop_functions) #>                key                         label                instance #> 1:    bayesopt_ego Efficient Global Optimization OptimInstanceSingleCrit #> 2:   bayesopt_mpcl      Multipoint Constant Liar OptimInstanceSingleCrit #> 3: bayesopt_parego                        ParEGO  OptimInstanceMultiCrit #> 4: bayesopt_smsego                        SmsEGO  OptimInstanceMultiCrit #>                                   man #> 1:    mlr3mbo::mlr_loop_functions_ego #> 2:   mlr3mbo::mlr_loop_functions_mpcl #> 3: mlr3mbo::mlr_loop_functions_parego #> 4: mlr3mbo::mlr_loop_functions_smsego"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_ego.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential Singlecriteria Bayesian Optimization — mlr_loop_functions_ego","title":"Sequential Singlecriteria Bayesian Optimization — mlr_loop_functions_ego","text":"MBO loop function sequential singlecriteria Bayesian optimization. Normally used inside OptimizerMbo.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_ego.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential Singlecriteria Bayesian Optimization — mlr_loop_functions_ego","text":"","code":"bayesopt_ego(   instance,   init_design_size = NULL,   surrogate = NULL,   acq_function = NULL,   acq_optimizer = NULL,   random_interleave_iter = 0L )"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_ego.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential Singlecriteria Bayesian Optimization — mlr_loop_functions_ego","text":"instance (bbotk::OptimInstanceSingleCrit) bbotk::OptimInstanceSingleCrit optimized. init_design_size (NULL | integer(1)) Size initial design. NULL 4 * d used d dimensionality search space. Points drawn uniformly random. surrogate (NULL | Surrogate)Surrogate used surrogate. Typically SurrogateLearner. NULL default_surrogate(instance) used. acq_function (NULL | AcqFunction).AcqFunction used acquisition function. NULL default_acqfun(instance) used. acq_optimizer (AcqOptimizer)AcqOptimizer used acquisition function optimizer. NULL default_acqopt(acqfun) used. random_interleave_iter (integer(1)) Every \"random_interleave_iter\" iteration (starting initial design), point sampled uniformly random evaluated (instead model based proposal). example, random_interleave_iter = 2, random interleaving performed second, fourth, sixth, ... iteration. Default 0, .e., random interleaving performed .","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_ego.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential Singlecriteria Bayesian Optimization — mlr_loop_functions_ego","text":"invisible(instance) original instance modified -place returned invisible.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_ego.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sequential Singlecriteria Bayesian Optimization — mlr_loop_functions_ego","text":"surrogate NULL acq_function given contains $surrogate, Surrogate used. can pass surrogate given bbotk::Archive instance initialization. case, bbotk::Archive given instance set execution. Similarly, can pass acq_function given surrogate initialization acq_optimizer given acq_function, .e., delayed initialization handled automatically.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_ego.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sequential Singlecriteria Bayesian Optimization — mlr_loop_functions_ego","text":"Jones, R. D, Schonlau, Matthias, Welch, J. W (1998). “Efficient Global Optimization Expensive Black-Box Functions.” Journal Global optimization, 13(4), 455--492. Snoek, Jasper, Larochelle, Hugo, Adams, P R (2012). “Practical Bayesian Optimization Machine Learning Algorithms.” Pereira F, Burges CJC, Bottou L, Weinberger KQ (eds.), Advances Neural Information Processing Systems, volume 25, 2951--2959.","code":""},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_ego.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequential Singlecriteria Bayesian Optimization — mlr_loop_functions_ego","text":"","code":"library(bbotk) library(paradox) library(mlr3learners)  # expected improvement objective = ObjectiveRFun$new(   fun = function(xs) list(y = xs$x ^ 2),   domain = ps(x = p_dbl(lower = -5, upper = 5)),   codomain = ps(y = p_dbl(tags = \"minimize\")) )  terminator = trm(\"evals\", n_evals = 5)  instance = OptimInstanceSingleCrit$new(   objective = objective,   terminator = terminator )  bayesopt_ego(instance)  # expected improvement per second objective = ObjectiveRFun$new(   fun = function(xs) list(y = xs$x ^ 2, time = abs(xs$x)),   domain = ps(x = p_dbl(lower = -5, upper = 5)),   codomain = ps(y = p_dbl(tags = \"minimize\"), time = p_dbl(tags = \"time\")),   id = \"xsq\" )  terminator = trm(\"evals\", n_evals = 5)  instance = OptimInstanceSingleCrit$new(   objective = objective,   terminator = terminator )  surrogate = default_surrogate(instance, n_learner = 2L) surrogate$y_cols = c(\"y\", \"time\")  acq_function = AcqFunctionEIPS$new()  bayesopt_ego(instance, surrogate = surrogate, acq_function = acq_function)"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_mpcl.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential Singlecriteria Bayesian Optimization Via Multipoint Constant Liar — mlr_loop_functions_mpcl","title":"Sequential Singlecriteria Bayesian Optimization Via Multipoint Constant Liar — mlr_loop_functions_mpcl","text":"MBO loop function sequential singlecriteria Bayesian optimization via multipoint constant liar. Normally used inside OptimizerMbo.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_mpcl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential Singlecriteria Bayesian Optimization Via Multipoint Constant Liar — mlr_loop_functions_mpcl","text":"","code":"bayesopt_mpcl(   instance,   init_design_size = NULL,   surrogate = NULL,   acq_function = NULL,   acq_optimizer = NULL,   q = 2L,   liar = mean,   random_interleave_iter = 0L )"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_mpcl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential Singlecriteria Bayesian Optimization Via Multipoint Constant Liar — mlr_loop_functions_mpcl","text":"instance (bbotk::OptimInstanceSingleCrit) bbotk::OptimInstanceSingleCrit optimized. init_design_size (NULL | integer(1)) Size initial design. NULL 4 * d used d dimensionality search space. Points drawn uniformly random. surrogate (NULL | Surrogate)Surrogate used surrogate. Typically SurrogateLearner. NULL default_surrogate(instance) used. acq_function (NULL | AcqFunction).AcqFunction used acquisition function. NULL default_acqfun(instance) used. acq_optimizer (AcqOptimizer)AcqOptimizer used acquisition function optimizer. NULL default_acqopt(acqfun) used. q (integer(1)) Batch size > 1. Default 2. liar (function) function accepting numeric vector input returning single numeric output. Default mean. random_interleave_iter (integer(1)) Every \"random_interleave_iter\" iteration (starting initial design), point sampled uniformly random evaluated (instead model based proposal). example, random_interleave_iter = 2, random interleaving performed second, fourth, sixth, ... iteration. Default 0, .e., random interleaving performed .","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_mpcl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential Singlecriteria Bayesian Optimization Via Multipoint Constant Liar — mlr_loop_functions_mpcl","text":"invisible(instance) original instance modified -place returned invisible.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_mpcl.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sequential Singlecriteria Bayesian Optimization Via Multipoint Constant Liar — mlr_loop_functions_mpcl","text":"surrogate NULL acq_function given contains $surrogate, Surrogate used. can pass surrogate given bbotk::Archive instance initialization. case, bbotk::Archive given instance set execution. Similarly, can pass acq_function given surrogate initialization acq_optimizer given acq_function, .e., delayed initialization handled automatically.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_mpcl.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sequential Singlecriteria Bayesian Optimization Via Multipoint Constant Liar — mlr_loop_functions_mpcl","text":"Wang, Jialei, Clark, C. S, Liu, Eric, Frazier, . P (2020). “Parallel Bayesian Global Optimization Expensive Functions.” Operations Research, 68(6), 1850--1865.","code":""},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_mpcl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequential Singlecriteria Bayesian Optimization Via Multipoint Constant Liar — mlr_loop_functions_mpcl","text":"","code":"library(bbotk) library(paradox) library(mlr3learners)  objective = ObjectiveRFun$new(   fun = function(xs) list(y = xs$x ^ 2),   domain = ps(x = p_dbl(lower = -5, upper = 5)),   codomain = ps(y = p_dbl(tags = \"minimize\")) )  terminator = trm(\"evals\", n_evals = 5)  instance = OptimInstanceSingleCrit$new(   objective = objective,   terminator = terminator )  bayesopt_mpcl(instance)"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_parego.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential Multicriteria Bayesian Optimization Via ParEGO — mlr_loop_functions_parego","title":"Sequential Multicriteria Bayesian Optimization Via ParEGO — mlr_loop_functions_parego","text":"MBO loop function sequential multicriteria Bayesian optimization via ParEGO. Normally used inside OptimizerMbo.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_parego.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential Multicriteria Bayesian Optimization Via ParEGO — mlr_loop_functions_parego","text":"","code":"bayesopt_parego(   instance,   init_design_size = NULL,   surrogate = NULL,   acq_function = NULL,   acq_optimizer = NULL,   q = 1L,   s = 100L,   rho = 0.05,   random_interleave_iter = 0L )"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_parego.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential Multicriteria Bayesian Optimization Via ParEGO — mlr_loop_functions_parego","text":"instance (bbotk::OptimInstanceMultiCrit) bbotk::OptimInstanceMultiCrit optimized. init_design_size (NULL | integer(1)) Size initial design. NULL 4 * d used d dimensionality search space. surrogate (NULL | SurrogateLearner)SurrogateLearner used surrogate. NULL default_surrogate(instance), n_learner = 1 used. Points drawn uniformly random. acq_function (NULL | AcqFunction).AcqFunction used acquisition function. NULL AcqFunctionEI used. acq_optimizer (AcqOptimizer)AcqOptimizer used acquisition function optimizer. NULL default_acqopt(acqfun) used. q (integer(1)) Batch size. Default 1. s (integer(1)) \\(s\\) Equation 1 Knowles (2006). Determines total number possible random weight vectors. Default 100. rho (numeric(1)) \\(\\rho\\) Equation 2 Knowles (2006) scaling linear part augmented Tchebycheff function. Default 0.05 random_interleave_iter (integer(1)) Every \"random_interleave_iter\" iteration (starting initial design), point sampled uniformly random evaluated (instead model based proposal). example, random_interleave_iter = 2, random interleaving performed second, fourth, sixth, ... iteration. Default 0, .e., random interleaving performed .","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_parego.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential Multicriteria Bayesian Optimization Via ParEGO — mlr_loop_functions_parego","text":"invisible(instance) original instance modified -place returned invisible.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_parego.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sequential Multicriteria Bayesian Optimization Via ParEGO — mlr_loop_functions_parego","text":"surrogate NULL acq_function given contains $surrogate, SurrogateLearner used. can pass surrogate given bbotk::Archive instance initialization. case, bbotk::Archive given instance set execution. Similarly, can pass acq_function given surrogate initialization acq_optimizer given acq_function, .e., delayed initialization handled automatically. scalarizations target variables stored y_scal column bbotk::Archive bbotk::OptimInstanceMultiCrit.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_parego.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sequential Multicriteria Bayesian Optimization Via ParEGO — mlr_loop_functions_parego","text":"Knowles, Joshua (2006). “ParEGO: Hybrid Algorithm -Line Landscape Approximation Expensive Multiobjective Optimization Problems.” IEEE Transactions Evolutionary Computation, 10(1), 50--66.","code":""},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_parego.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequential Multicriteria Bayesian Optimization Via ParEGO — mlr_loop_functions_parego","text":"","code":"library(bbotk) library(paradox) library(mlr3learners)  fun = function(xs) {   list(y1 = xs$x^2, y2 = (xs$x - 2) ^ 2) } domain = ps(x = p_dbl(lower = -10, upper = 10)) codomain = ps(y1 = p_dbl(tags = \"minimize\"), y2 = p_dbl(tags = \"minimize\")) objective = ObjectiveRFun$new(fun = fun, domain = domain, codomain = codomain)  terminator = trm(\"evals\", n_evals = 5)  instance = OptimInstanceMultiCrit$new(   objective = objective,   terminator = terminator )  bayesopt_parego(instance)"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_smsego.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential Multicriteria Bayesian Optimization Via SmsEGO. — mlr_loop_functions_smsego","title":"Sequential Multicriteria Bayesian Optimization Via SmsEGO. — mlr_loop_functions_smsego","text":"MBO loop function sequential multicriteria Bayesian optimization via SmsEGO. Normally used inside OptimizerMbo.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_smsego.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential Multicriteria Bayesian Optimization Via SmsEGO. — mlr_loop_functions_smsego","text":"","code":"bayesopt_smsego(   instance,   init_design_size = NULL,   surrogate = NULL,   acq_function = NULL,   acq_optimizer = NULL,   random_interleave_iter = 0L )"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_smsego.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential Multicriteria Bayesian Optimization Via SmsEGO. — mlr_loop_functions_smsego","text":"instance (bbotk::OptimInstanceMultiCrit) bbotk::OptimInstanceMultiCrit optimized. init_design_size (NULL | integer(1)) Size initial design. NULL 4 * d used d dimensionality search space. Points drawn uniformly random. surrogate (NULL | SurrogateLearnerCollection)SurrogateLearnerCollection used surrogate. NULL default_surrogate(instance) used. acq_function (NULL | AcqFunctionSmsEgo).AcqFunctionSmsEgo used acquisition function. NULL AcqFunctionSmsEgo used. acq_optimizer (AcqOptimizer)AcqOptimizer used acquisition function optimizer. NULL default_acqopt(acqfun) used. random_interleave_iter (integer(1)) Every \"random_interleave_iter\" iteration (starting initial design), point sampled uniformly random evaluated (instead model based proposal). example, random_interleave_iter = 2, random interleaving performed second, fourth, sixth, ... iteration. Default 0, .e., random interleaving performed .","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_smsego.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential Multicriteria Bayesian Optimization Via SmsEGO. — mlr_loop_functions_smsego","text":"invisible(instance) original instance modified -place returned invisible.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_smsego.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sequential Multicriteria Bayesian Optimization Via SmsEGO. — mlr_loop_functions_smsego","text":"surrogate NULL acq_function given contains $surrogate, SurrogateLearnerCollection used. can pass surrogate given bbotk::Archive instance initialization. case, bbotk::Archive given instance set execution. Similarly, can pass acq_function given surrogate initialization acq_optimizer given acq_function, .e., delayed initialization handled automatically. Due iterative computation epsilon within AcqFunctionSmsEgo, requires bbotk::Terminator bbotk::OptimInstanceMultiCrit bbotk::TerminatorEvals.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_smsego.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sequential Multicriteria Bayesian Optimization Via SmsEGO. — mlr_loop_functions_smsego","text":"Beume N, Naujoks B, Emmerich M (2007). “SMS-EMOA: Multiobjective selection based dominated hypervolume.” European Journal Operational Research, 181(3), 1653--1669. Ponweiser, Wolfgang, Wagner, Tobias, Biermann, Dirk, Vincze, Markus (2008). “Multiobjective Optimization Limited Budget Evaluations Using Model-Assisted S-Metric Selection.” Proceedings 10th International Conference Parallel Problem Solving Nature, 784--794.","code":""},{"path":[]},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_loop_functions_smsego.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequential Multicriteria Bayesian Optimization Via SmsEGO. — mlr_loop_functions_smsego","text":"","code":"library(bbotk) library(paradox) library(mlr3learners)  fun = function(xs) {   list(y1 = xs$x^2, y2 = (xs$x - 2) ^ 2) } domain = ps(x = p_dbl(lower = -10, upper = 10)) codomain = ps(y1 = p_dbl(tags = \"minimize\"), y2 = p_dbl(tags = \"minimize\")) objective = ObjectiveRFun$new(fun = fun, domain = domain, codomain = codomain)  terminator = trm(\"evals\", n_evals = 5)  instance = OptimInstanceMultiCrit$new(   objective = objective,   terminator = terminator )  bayesopt_smsego(instance)"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_optimizers_mbo.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Based Optimization — mlr_optimizers_mbo","title":"Model Based Optimization — mlr_optimizers_mbo","text":"OptimizerMbo class implements model based optimization. implementation follows modular layout relying loop function determining MBO flavor used, e.g., bayesopt_ego sequential single objective MBO, Surrogate, AcqFunction, e.g., AcqFunctionEI expected improvement AcqOptimizer. information default values loop_function, surrogate, acq_function acq_optimizer, see ?mbo_defaults.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_optimizers_mbo.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Model Based Optimization — mlr_optimizers_mbo","text":"bbotk::Optimizer -> OptimizerMbo","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_optimizers_mbo.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Model Based Optimization — mlr_optimizers_mbo","text":"loop_function (function | NULL). surrogate (Surrogate | NULL). acq_function (AcqFunction | NULL). acq_optimizer (AcqOptimizer | NULL). args (named list()) arguments passed loop_function. example, random_interleave_iter. result_function (function | NULL). param_classes (character()) Supported parameter classes optimizer can optimize. Determined based surrogate acq_optimizer. Subclasses paradox::Param. properties (character()) Set properties optimizer. Must subset bbotk_reflections$optimizer_properties. MBO principle flexible default assume optimizer properties. Still, properties can changed manually, depending loop_function, surrogate, acq_functionandacq_optimizer` hand. packages (character()) Set required packages. warning signaled prior optimization least one packages installed, loaded (attached) later -demand via requireNamespace(). Required packages determined based surrogate acq_optimizer.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_optimizers_mbo.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Model Based Optimization — mlr_optimizers_mbo","text":"bbotk::Optimizer$format() bbotk::Optimizer$help() bbotk::Optimizer$optimize()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_optimizers_mbo.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Model Based Optimization — mlr_optimizers_mbo","text":"OptimizerMbo$new() OptimizerMbo$print() OptimizerMbo$clone()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_optimizers_mbo.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Model Based Optimization — mlr_optimizers_mbo","text":"Creates new instance R6 class. information default values loop_function, surrogate, acq_function acq_optimizer, see ?mbo_defaults.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_optimizers_mbo.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Based Optimization — mlr_optimizers_mbo","text":"","code":"OptimizerMbo$new(   loop_function = NULL,   surrogate = NULL,   acq_function = NULL,   acq_optimizer = NULL,   args = NULL,   result_function = NULL )"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_optimizers_mbo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Based Optimization — mlr_optimizers_mbo","text":"loop_function (function) Loop function run. See mbo_defaults defaults. surrogate Surrogate surrogate object. defaults see mbo_defaults. acq_function AcqFunction acquistion function object. defaults see mbo_defaults. acq_optimizer AcqOptimizer optimizer optimizes acquistion function. defaults see mbo_defaults. args (named list()) arguments passed loop_function. example, random_interleave_iter. result_function (function) Optional function called optimization terminates. Determines final result optimization calculated. Requires arguments inst (bbotk::OptimInstance) self (OptimizerMbo). See example result_by_surrogate_design used default bbotk::OptimInstance property \"noisy\" (case mlr3tuning::TuningInstanceSingleCrit mlr3tuning::TuningInstanceMultiCrit).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_optimizers_mbo.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Model Based Optimization — mlr_optimizers_mbo","text":"Print method.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_optimizers_mbo.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Based Optimization — mlr_optimizers_mbo","text":"","code":"OptimizerMbo$print()"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_optimizers_mbo.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Model Based Optimization — mlr_optimizers_mbo","text":"(character()).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_optimizers_mbo.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Model Based Optimization — mlr_optimizers_mbo","text":"objects class cloneable method.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_optimizers_mbo.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Based Optimization — mlr_optimizers_mbo","text":"","code":"OptimizerMbo$clone(deep = FALSE)"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_optimizers_mbo.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Based Optimization — mlr_optimizers_mbo","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_tuners_mbo.html","id":null,"dir":"Reference","previous_headings":"","what":"Tuner using Bayesian Optimization — mlr_tuners_mbo","title":"Tuner using Bayesian Optimization — mlr_tuners_mbo","text":"Tune hyperparameters using model based optimization. minimal interface internally passing OptimizerMbo. additional information documentation see OptimizerMbo.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_tuners_mbo.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Tuner using Bayesian Optimization — mlr_tuners_mbo","text":"mlr3tuning::Tuner -> mlr3tuning::TunerFromOptimizer -> TunerMbo","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_tuners_mbo.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Tuner using Bayesian Optimization — mlr_tuners_mbo","text":"loop_function (function | NULL). surrogate (Surrogate | NULL). acq_function (AcqFunction | NULL). acq_optimizer (AcqOptimizer | NULL). args (named list()) arguments passed loop_function. example, random_interleave_iter. result_function (function | NULL). param_classes (character()) Supported parameter classes optimizer can optimize. Determined based surrogate acq_optimizer. Subclasses paradox::Param. properties (character()) Set properties optimizer. Must subset bbotk_reflections$optimizer_properties. MBO principle flexible default assume optimizer properties. Still, properties can changed manually, depending loop_function, surrogate, acq_functionandacq_optimizer` hand. packages (character()) Set required packages. warning signaled prior optimization least one packages installed, loaded (attached) later -demand via requireNamespace(). Required packages determined based surrogate acq_optimizer.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_tuners_mbo.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Tuner using Bayesian Optimization — mlr_tuners_mbo","text":"mlr3tuning::Tuner$format() mlr3tuning::Tuner$help() mlr3tuning::TunerFromOptimizer$optimize()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_tuners_mbo.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Tuner using Bayesian Optimization — mlr_tuners_mbo","text":"TunerMbo$new() TunerMbo$print() TunerMbo$clone()","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_tuners_mbo.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Tuner using Bayesian Optimization — mlr_tuners_mbo","text":"Creates new instance R6 class. information default values loop_function, surrogate, acq_function acq_optimizer, see ?mbo_defaults. Note parameters simply passed OptimizerMbo respective fields simply (settable) active bindings fields OptimizerMbo.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_tuners_mbo.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tuner using Bayesian Optimization — mlr_tuners_mbo","text":"","code":"TunerMbo$new(   loop_function = NULL,   surrogate = NULL,   acq_function = NULL,   acq_optimizer = NULL,   args = NULL,   result_function = NULL )"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_tuners_mbo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tuner using Bayesian Optimization — mlr_tuners_mbo","text":"loop_function (function) Loop function run. See mbo_defaults defaults. surrogate Surrogate surrogate object. defaults see mbo_defaults. acq_function AcqFunction acquistion function object. defaults see mbo_defaults. acq_optimizer AcqOptimizer optimizer optimizes acquistion function. defaults see mbo_defaults. args (named list()) arguments passed loop_function. example, random_interleave_iter. result_function (function) Optional function called optimization terminates. Determines final result optimization calculated. Requires arguments inst (bbotk::OptimInstance) self (OptimizerMbo). See example result_by_surrogate_design used default bbotk::OptimInstance property \"noisy\" (case mlr3tuning::TuningInstanceSingleCrit mlr3tuning::TuningInstanceMultiCrit).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_tuners_mbo.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Tuner using Bayesian Optimization — mlr_tuners_mbo","text":"Print method.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_tuners_mbo.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Tuner using Bayesian Optimization — mlr_tuners_mbo","text":"","code":"TunerMbo$print()"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_tuners_mbo.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Tuner using Bayesian Optimization — mlr_tuners_mbo","text":"(character()).","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_tuners_mbo.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Tuner using Bayesian Optimization — mlr_tuners_mbo","text":"objects class cloneable method.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_tuners_mbo.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Tuner using Bayesian Optimization — mlr_tuners_mbo","text":"","code":"TunerMbo$clone(deep = FALSE)"},{"path":"https://mlr3mbo.mlr-org.com/reference/mlr_tuners_mbo.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tuner using Bayesian Optimization — mlr_tuners_mbo","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/result_by_surrogate_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Choose Final Point(s) by Surrogate Mean — result_by_surrogate_design","title":"Choose Final Point(s) by Surrogate Mean — result_by_surrogate_design","text":"Choose final point(s) best surrogate mean prediction evaluated points.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/result_by_surrogate_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choose Final Point(s) by Surrogate Mean — result_by_surrogate_design","text":"","code":"result_by_surrogate_design(instance, optimizer_mbo)"},{"path":"https://mlr3mbo.mlr-org.com/reference/result_by_surrogate_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Choose Final Point(s) by Surrogate Mean — result_by_surrogate_design","text":"instance (bbotk::OptimInstanceSingleCrit | bbotk::OptimInstanceMultiCrit) bbotk::OptimInstance result assigned . optimizer_mbo (OptimizerMbo) OptimizerMbo generates final result.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/srlrn.html","id":null,"dir":"Reference","previous_headings":"","what":"Syntactic Sugar Surrogate Learner Construction — srlrn","title":"Syntactic Sugar Surrogate Learner Construction — srlrn","text":"function allows construct SurrogateLearner spirit mlr_sugar mlr3.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/srlrn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syntactic Sugar Surrogate Learner Construction — srlrn","text":"","code":"srlrn(learner, archive = NULL, x_cols = NULL, y_col = NULL, ...)"},{"path":"https://mlr3mbo.mlr-org.com/reference/srlrn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syntactic Sugar Surrogate Learner Construction — srlrn","text":"learner (mlr3::LearnerRegr)mlr3::LearnerRegr used. archive (NULL | bbotk::Archive)bbotk::Archive bbotk::OptimInstance used. Can also NULL. x_cols (NULL | character()) Names columns bbotk::Archive used features. Can also NULL. y_col (NULL | character(1)) Name column bbotk::Archive used target. Can also NULL. ... (named list()) Named arguments passed constructor, set parameters paradox::ParamSet.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/srlrn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Syntactic Sugar Surrogate Learner Construction — srlrn","text":"SurrogateLearner","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/srlrn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Syntactic Sugar Surrogate Learner Construction — srlrn","text":"","code":"srlrn(lrn(\"regr.featureless\"), catch_errors = FALSE) #> <SurrogateLearner>: LearnerRegrFeatureless #> * Parameters: calc_insample_perf=FALSE, catch_errors=FALSE"},{"path":"https://mlr3mbo.mlr-org.com/reference/srlrnc.html","id":null,"dir":"Reference","previous_headings":"","what":"Syntactic Sugar Surrogate Learner Collection Construction — srlrnc","title":"Syntactic Sugar Surrogate Learner Collection Construction — srlrnc","text":"function allows construct SurrogateLearnerCollection spirit mlr_sugar mlr3.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/srlrnc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syntactic Sugar Surrogate Learner Collection Construction — srlrnc","text":"","code":"srlrnc(learners, archive = NULL, x_cols = NULL, y_cols = NULL, ...)"},{"path":"https://mlr3mbo.mlr-org.com/reference/srlrnc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syntactic Sugar Surrogate Learner Collection Construction — srlrnc","text":"learners (List mlr3::LearnerRegr)mlr3::LearnerRegr used. archive (NULL | bbotk::Archive)bbotk::Archive bbotk::OptimInstance used. Can also NULL. x_cols (NULL | character()) Names columns bbotk::Archive used features. Can also NULL. y_cols (NULL | character()) Names columns bbotk::Archive used targets. Can also NULL. ... (named list()) Named arguments passed constructor, set parameters paradox::ParamSet.","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/srlrnc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Syntactic Sugar Surrogate Learner Collection Construction — srlrnc","text":"SurrogateLearnerCollection","code":""},{"path":"https://mlr3mbo.mlr-org.com/reference/srlrnc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Syntactic Sugar Surrogate Learner Collection Construction — srlrnc","text":"","code":"srlrnc(list(lrn(\"regr.featureless\"), lrn(\"regr.featureless\")), catch_errors = FALSE) #> <SurrogateLearnerCollection>: (LearnerRegrFeatureless | LearnerRegrFeatureless) #> * Parameters: calc_insample_perf=FALSE, catch_errors=FALSE"}]
