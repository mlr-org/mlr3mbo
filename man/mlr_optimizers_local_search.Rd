% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OptimizerBatchLocalSearch.R
\name{mlr_optimizers_local_search}
\alias{mlr_optimizers_local_search}
\alias{OptimizerBatchLocalSearch}
\title{Optimization via Local Search}
\description{
\code{OptimizerBatchLocalSearch} class that implements a simple Local Search.
Local Search starts by determining the \code{mu} initial best points present in the \link{Archive} of the
\link{OptimInstance}. If fewer points than \code{mu} are present, additional points sampled uniformly at
random are evaluated.

In each iteration, for each of the \code{mu} initial best points, \code{n_points} neighbors are generated
by local mutation. Local mutation generates a neighbor by sampling a single parameter that is to
be mutated and then proceeds as follows: Double parameters (\link[paradox:Domain]{paradox::p_dbl}) are mutated via
Gaussian mutation (with a prior standardization to \verb{[0, 1]} and retransformation after mutation).
Integer parameters (\link[paradox:Domain]{paradox::p_int}) undergo the same mutation but are rounded to the closest
integer after mutation. Categorical parameters (\link[paradox:Domain]{paradox::p_fct} and \link[paradox:Domain]{paradox::p_lgl}) are
mutated via uniform mutation. Note that parameters that are conditioned on (i.e., they are
parents of a \link[paradox:Condition]{paradox::Condition}, see the dependencies of the search space) are not mutated.
}
\section{Parameters}{

\describe{
\item{\code{mu}}{\code{integer(1)}\cr
Size of the initial best points which are used as a starting points for the Local Search.
Default is \code{10}.
}
\item{\code{n_points}}{\code{integer(1)}\cr
Number of neighboring points to generate for each of the \code{mu} best starting points in each
iteration.
Default is \code{100}.
}
\item{\code{sigma}}{\code{numeric(1)}\cr
Standard deviation used for mutation of numeric parameters.
Default is \code{0.1}.
}
}
}

\section{Super classes}{
\code{\link[bbotk:Optimizer]{bbotk::Optimizer}} -> \code{\link[bbotk:OptimizerBatch]{bbotk::OptimizerBatch}} -> \code{OptimizerBatchLocalSearch}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OptimizerBatchLocalSearch-new}{\code{OptimizerBatchLocalSearch$new()}}
\item \href{#method-OptimizerBatchLocalSearch-clone}{\code{OptimizerBatchLocalSearch$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="bbotk" data-topic="Optimizer" data-id="format"><a href='../../bbotk/html/Optimizer.html#method-Optimizer-format'><code>bbotk::Optimizer$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="bbotk" data-topic="Optimizer" data-id="help"><a href='../../bbotk/html/Optimizer.html#method-Optimizer-help'><code>bbotk::Optimizer$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="bbotk" data-topic="Optimizer" data-id="print"><a href='../../bbotk/html/Optimizer.html#method-Optimizer-print'><code>bbotk::Optimizer$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="bbotk" data-topic="OptimizerBatch" data-id="optimize"><a href='../../bbotk/html/OptimizerBatch.html#method-OptimizerBatch-optimize'><code>bbotk::OptimizerBatch$optimize()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OptimizerBatchLocalSearch-new"></a>}}
\if{latex}{\out{\hypertarget{method-OptimizerBatchLocalSearch-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OptimizerBatchLocalSearch$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OptimizerBatchLocalSearch-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OptimizerBatchLocalSearch-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OptimizerBatchLocalSearch$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
