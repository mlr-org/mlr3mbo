% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bayesopt_moo.R
\name{bayesopt_moo}
\alias{bayesopt_moo}
\title{Sequential Multicriteria Bayesian Optimization}
\usage{
bayesopt_moo(
  instance,
  init_design_size = NULL,
  surrogate = NULL,
  acq_function,
  acq_optimizer = NULL
)
}
\arguments{
\item{instance}{(\link[bbotk:OptimInstanceMultiCrit]{bbotk::OptimInstanceMultiCrit})\cr
The \link[bbotk:OptimInstanceMultiCrit]{bbotk::OptimInstanceMultiCrit} to be optimized.}

\item{init_design_size}{(\code{NULL} | \code{integer(1)})\cr
Size of the initial design.
If \code{NULL} \code{4 * d} is used with \code{d} being the dimensionality of the search space.
Points are drawn uniformly at random.}

\item{surrogate}{(\code{NULL} | \link{Surrogate})\cr
\link{Surrogate} to be used as a surrogate.
Typically a \link{SurrogateLearner}.
If \code{NULL} \code{default_surrogate(instance)} is used.}

\item{acq_function}{(\link{AcqFunction}).\cr
\link{AcqFunction} to be used as acquisition function, i.e., \link{AcqFunctionEHVI}.}

\item{acq_optimizer}{(\link{AcqOptimizer})\cr
\link{AcqOptimizer} to be used as acquisition function optimizer.}
}
\value{
invisible(instance)\cr
The original instance is modified in-place and returned invisible.
}
\description{
MBO loop function for sequential multicriteria Bayesian optimization.
Normally used inside an \link{OptimizerMbo}.
}
\note{
\itemize{
\item If \code{surrogate} is \code{NULL} but \code{acq_function} contains a \verb{$surrogate}, this \link{Surrogate} is used.
\item You can pass a \code{surrogate} that was not given the \link[bbotk:Archive]{bbotk::Archive} of the
\code{instance} during initialization.
In this case, the \link[bbotk:Archive]{bbotk::Archive} of the given \code{instance} is set during execution.
\item Similarly, you can pass an \code{acq_function} that was not given the \code{surrogate} during initialization
and an \code{acq_optimizer} that was not given the \code{acq_function}, i.e., delayed initialization is
handled automatically.
}
}
\examples{
library(bbotk)
library(paradox)
library(mlr3learners)

fun = function(xs) {
  list(y1 = xs$x^2, y2 = (xs$x - 2) ^ 2)
}
domain = ps(x = p_dbl(lower = -10, upper = 10))
codomain = ps(y1 = p_dbl(tags = "minimize"), y2 = p_dbl(tags = "minimize"))
objective = ObjectiveRFun$new(fun = fun, domain = domain, codomain = codomain)

terminator = trm("evals", n_evals = 10)

instance = OptimInstanceMultiCrit$new(
  objective = objective,
  terminator = terminator,
)

acq_function = AcqFunctionEHVI$new()
bayesopt_moo(instance, acq_function = acq_function)
}
\seealso{
Other Loop Function: 
\code{\link{bayesopt_ego}()},
\code{\link{bayesopt_mpcl}()},
\code{\link{bayesopt_parego}()},
\code{\link{bayesopt_smsego}()}
}
\concept{Loop Function}
