% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SamplerMbo.R
\name{SamplerMbo}
\alias{SamplerMbo}
\title{Sampler Suitable for Combining Hyperband With Model Based Optimization}
\description{
This class provides a \link[paradox:Sampler]{paradox::Sampler} that allows for sampling points relying on Model Based Optimization.
Using this sampler together with \link[mlr3hyperband:mlr_optimizers_hyperband]{mlr3hyperband::OptimizerHyperband} or \link[mlr3hyperband:mlr_tuners_hyperband]{mlr3hyperband::TunerHyperband} allows for constructing an optimizer
that performs a combination of Hyperband and Model Based Optimization similarly as the BOHB algorithm in the context of multifidelity optimization.
}
\examples{
if (requireNamespace("mlr3learners") &
   requireNamespace("DiceKriging") &
   requireNamespace("rgenoud") &
   requireNamespace("mlr3hyperband")) {

  library(bbotk)
  library(paradox)
  library(mlr3hyperband)
  
  # Augmented Branin function
  fun = function(xs) {
    y = 
      (
        xs[["x2"]] - ((5.1 / (4 * pi^2)) - 0.1 * (1 - (xs[["fidelity"]] / 100))) *
        xs[["x1"]]^2 + (5 / pi) * xs[["x1"]] - 6
      ) ^ 2 +
      10 * (1 - (1 / (8 * pi))) * cos(xs[["x1"]]) + 10
    list(y = y)
  }
  domain = ps(
    x1 = p_dbl(lower = -5, upper = 10),
    x2 = p_dbl(lower = 0, upper = 15),
    fidelity = p_int(lower = 1, upper = 100, tags = "budget"))
  codomain = ps(y = p_dbl(tags = "minimize"))
  objective = ObjectiveRFun$new(fun = fun, domain = domain, codomain = codomain)

  instance = OptimInstanceSingleCrit$new(objective = objective, terminator = trm("none"))

  surrogate = default_surrogate(instance)

  acq_function = acqf("ei")

  acq_optimizer = acqo(
    optimizer = opt("random_search", batch_size = 100),
    terminator = trm("evals", n_evals = 100))

  sampler = SamplerMbo$new(
    instance = instance,
    surrogate = surrogate,
    acq_function = acq_function,
    acq_optimizer = acq_optimizer)

  optimizer = opt("hyperband", eta = 3, sampler = sampler, repetitions = 3)
  optimizer$optimize(instance)
}
}
\section{Super class}{
\code{\link[paradox:Sampler]{paradox::Sampler}} -> \code{SamplerMbo}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{instance}}{([bbotk::OptimInstance)\cr
The instance that is to be optimized.}

\item{\code{budget_id}}{(\code{character(1)})\cr
Id of the budget parameter part of the search space of the instance (i.e., the single numeric or integer parameter tagged via \code{"budget"}).}

\item{\code{search_space_sampler}}{(\link[paradox:Domain]{paradox::Domain})\cr
Search space the sampler operates on.
This is the same as the search space of the \link[bbotk:OptimInstance]{bbotk::OptimInstance} to be optimized but excludes the parameter specified via \code{budget_id}.}

\item{\code{rho}}{(\code{numeric(1)})\cr
Fraction of configurations that should be sampled uniformly at random.}

\item{\code{Nmin}}{(\code{integer(1)})\cr
Minimum number of observations required for any budget level for the model based proposal mechanism to take action.}

\item{\code{tmp_archive}}{(\link[bbotk:Archive]{bbotk::Archive})\cr
Temporal archive which is a copy of the archive of the \link[bbotk:OptimInstance]{bbotk::OptimInstance} used for updating the surrogate model within the model based proposal mechanism.}

\item{\code{surrogate}}{(\link{Surrogate} | \code{NULL})\cr
The surrogate.}

\item{\code{acq_function}}{(\link{AcqFunction} | \code{NULL})\cr
The acquisition function.}

\item{\code{acq_function_domain}}{(\link[paradox:Domain]{paradox::Domain})\cr
The domain of the acquisition function within the model based proposal mechanism.
This is the same as \code{search_space_sampler} without any potential transformation functions.}

\item{\code{acq_optimizer}}{(\link{AcqOptimizer} | \code{NULL})\cr
The acquisition function optimizer.}

\item{\code{sampler_random}}{(\link[paradox:SamplerUnif]{paradox::SamplerUnif})\cr
The sampler responsible for proposing points uniformly at random based on the fraction specified as \code{rho}.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SamplerMbo-new}{\code{SamplerMbo$new()}}
\item \href{#method-SamplerMbo-clone}{\code{SamplerMbo$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="paradox" data-topic="Sampler" data-id="format"><a href='../../paradox/html/Sampler.html#method-Sampler-format'><code>paradox::Sampler$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="paradox" data-topic="Sampler" data-id="print"><a href='../../paradox/html/Sampler.html#method-Sampler-print'><code>paradox::Sampler$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="paradox" data-topic="Sampler" data-id="sample"><a href='../../paradox/html/Sampler.html#method-Sampler-sample'><code>paradox::Sampler$sample()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SamplerMbo-new"></a>}}
\if{latex}{\out{\hypertarget{method-SamplerMbo-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SamplerMbo$new(
  instance,
  surrogate,
  acq_function,
  acq_optimizer,
  rho = 0.25,
  Nmin = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{instance}}{([bbotk::OptimInstance)\cr
The instance that is to be optimized.
Note that this is required as the model based sampling requires access to the evaluations logged in the \link[bbotk:Archive]{bbotk::Archive}.}

\item{\code{surrogate}}{(\link{Surrogate} | \code{NULL})\cr
The surrogate.}

\item{\code{acq_function}}{(\link{AcqFunction} | \code{NULL})\cr
The acquisition function.}

\item{\code{acq_optimizer}}{(\link{AcqOptimizer} | \code{NULL})\cr
The acquisition function optimizer.}

\item{\code{rho}}{(\code{numeric(1)})\cr
Fraction of configurations that should be sampled uniformly at random.}

\item{\code{Nmin}}{(\code{integer(1)})\cr
Minimum number of observations required for any budget level for the model based proposal mechanism to take action.
Default is to use the number of parameters of the search space of the instance + 2.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SamplerMbo-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SamplerMbo-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SamplerMbo$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
